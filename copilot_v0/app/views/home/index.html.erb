	<div class="small-11 small-centered  large-11 large-centered columns">
<h2>Listing maps</h2>
</div>
<div class="row">

  <div class="small-6 large-5 columns">
  
<table>
  <thead>
    <tr>
      <th>Map name</th>
      <th></th>
      <th></th>
      <th></th>
    </tr>
  </thead>

  <tbody>
    <% @maps.each do |map| %>
      <tr>
        <td><%= map.map_name %></td>
        <td><%= link_to 'Show', map %></td>
        <td><%= link_to 'Edit', edit_map_path(map) %></td>
        <td><%= link_to 'Destroy', map, method: :delete, data: { confirm: 'Are you sure?' } %></td>
      </tr>
    <% end %>
  </tbody>
</table>
</div>
<div class="small-6 large-7 columns">EMBEDED MAP</div>
</div>

<div class="row">
	<div class="small-6 large-5 columns">
<%= link_to 'New Map', new_map_path %>
</div>
</div>


<head>
	<title>Calendar: A date and time picker for the Foundation CSS Framework</title>

	<!-- Make sure you have the foundation base, and icons (v3) CSS -->
	<link rel="stylesheet" type="text/css" href="foundation/foundation.css" />
	<link rel="stylesheet" type="text/css" href="foundation-icon-fonts-3/foundation-icons.css" />

	<!-- Add the foundation calendar CSS -->
	<link rel="stylesheet" type="text/css" href="foundation_calendar.css" />

	<!-- Make sure you have jQuery, date.js loading properly -->
	<script type="text/javascript" src="js/jquery.js" ></script>
	<script type="text/javascript" src="js/date.js" ></script>

	<!-- Add the foundation calendar Javascript -->
	<script type="text/javascript" src="foundation_calendar-min.js" ></script>

	<style type="text/css">
	label {
		margin-top: 20px;
	}
	code {
		font-size: 14px;
	}

	.row {
		margin-bottom: 20px;
	}

	.header {
		border-bottom: 1px solid #333;
	}
	</style>
</head>
<body>
	<div class="row">
		<div class="small-12 columns">
			<h1>Calendar <small class="show-for-large-only">A date and time picker for the Foundation CSS framework</small></h1>
			<p class="hide-for-large-only">A date and time picker for the Foundation CSS framework</p>
		</div>
	</div>

	<div class="row">
		<div class="small-12 columns">
			<h2 class="header">Basic Setup</h2>
		</div>
	</div>

	<div class="row">
		<div class="medium-12 large-8 columns">
			<h3>Date & Time</h3>
			<p>The calendar is setup through unobtrusive javascript.  All you have to do is add a parameter to the input field, and voila, you have a date/time picker:</p>

			<div class="row">
				<div class="small-12 medium-8 large-12 columns medium-centered">
					<input type="text" data-date-time />
				</div>
							</div>

			<div class="row">
				<div class="small-12 medium-8 large-12 columns medium-centered">
					<input type="text" data-date data-date-format="%d/%m/%Y" />
				</div>
			</div>

			<label>Code:</label>
			<code>
					&lt;input type="text" data-date-time /&gt;
			</code>
		</div>
	</div>
	<div class="row">
		<div class="medium-12 large-8 columns large-offset-2">
			<h3>Date Only</h3>

			<p>The calendar is setup through unobtrusive javascript.  All you have to do is add a parameter to the input field, and voila, you have a date/time picker:</p>

			<div class="row">
				<div class="small-12 medium-8 large-12 columns medium-centered">
					<input type="text" data-date />
				</div>
			</div>

			<label>Code:</label>
			<code>
					&lt;input type="text" data-date /&gt;
			</code>
		</div>
	</div>
	<div class="row">
		<div class="medium-12 large-8 columns large-offset-4">
			<h3>Time Only</h3>

			<p>The calendar is setup through unobtrusive javascript.  All you have to do is add a parameter to the input field, and voila, you have a date/time picker:</p>

			<div class="row">
				<div class="small-12 medium-8 large-12 columns medium-centered">
					<input type="text" data-time />
				</div>
			</div>

			<label>Code:</label>
			<code>
					&lt;input type="text" data-time /&gt;
			</code>
		</div>

	</div>

	<div class="row">
		<div class="small-12 columns">
			<h2 class="header">Display Formats</h2>

			<p>The display format strings are based on a modified set of the Ruby 'strftime' formatting conventions.  <a href="http://apidock.com/ruby/DateTime/strftime" target="_blank">Here's a list of the formatting options.</a></p>

			<p>Display formats are provided to each instance by providing the input with <strong>data-date-format</strong> and <strong>data-time-format</strong> parameters, respectively.</p>
		</div>
	</div>

	<div class="row">
		<div class="medium-12 large-8 columns">
			<h3>Date Format</h3>
			<p>The date format for the display can be specified using the <strong>data-date-format</strong> parameter. Like so:</p>

			<div class="row">
				<div class="small-12 medium-8 large-12 columns medium-centered">
					<input type="text" data-date-time data-date-format="%m/%d/%Y" />
				</div>
			</div>

			<label>Code:</label>
			<code>
					&lt;input type="text" data-date-time  data-date-format="%m/%d/%Y"  /&gt;
			</code>
		</div>
	</div>

	<div class="row">
		<div class="medium-12 large-8 columns  large-offset-4">
			<h3>Time Format</h3>
			<p>The date format for the display can be specified using the <strong>data-time-format</strong> parameter. Like so:</p>

			<div class="row">
				<div class="small-12 medium-8 large-12 columns medium-centered">
					<input type="text" data-date-time data-time-format="%H:%M:%S" />
				</div>
			</div>

			<label>Code:</label>
			<code>
					&lt;input type="text" data-date-time  data-time-format="%H:%M:%S"  /&gt;
			</code>
		</div>
	</div>


	<div class="row">
		<div class="small-12 columns">
			<h2 class="header">Values</h2>

			<p>You can fully manage the values that are set and generated by the UI as well.  This will allow you to provide a value, modify it, and return to the system in a format that is appropriate.</p>			
		</div>
	</div>

	<div class="row">
		<div class="medium-12 large-8 columns">
			<h3>Initial Value</h3>

			<p>You can set the initial value for the field, using the standard input <strong>value</strong> parameter. The value should be provided in a format that Javascript can parse, the suggested format is <strong>YYYY-MM-DD HH:MM:SS</strong>. Like so:</a></p>

			<div class="row">
				<div class="small-12 medium-8 large-12 columns medium-centered">
					<input type="text" data-date-time value="1977-07-06 14:32:01" />
				</div>
			</div>

			<label>Code:</label>
			<code>
					&lt;input type="text" data-date-time  value="1977-07-06 14:32:01"  /&gt;
			</code>
		</div>
	</div>


	<div class="row">
		<div class="medium-12 large-8 columns large-offset-2">
			<h3>Value Format</h3>

			<div class="row">
				<div class="small-12 medium-8 large-12 columns medium-centered">
					<input type="text" data-date-time data-value-format="%Y/%m/%d %H:%M:%S" />

					<button class="small radius" style="margin-top: 10px;" onClick="alert(jQuery(this).parent().find('input').val());return false;" >Show the value</button>
				</div>
			</div>

			<label>Code:</label>
			<code>
					&lt;input type="text" data-date-time  data-value-format="%Y/%m/%d %H:%M:%S"  /&gt;
			</code>
		</div>
	</div>

	<div class="row">
		<div class="medium-12 large-8 columns large-offset-4">
			<h3>Allow Null/Blank Values</h3>

			<p>All of the implementations so far, require a value to exist, or a default value is implied.  This doesn't allow you to remove a value should you want to inject a null value for a field.</p>

			<p>To allow a field to be set to null, all you need to do is set the <strong>data-nullable</strong> parameter in the input field.  This will provide a button that will clear the field. Like so:</p>

			<div class="row" style="margin-bottom: 10px;">
				<div class="small-12 medium-8 large-12 columns medium-centered">
					<label>Initial value: 1977-07-06 14:32:01</label>
					<input type="text" data-date-time data-nullable value="1977-07-06 14:32:01" />
				</div>
			</div>

			<div class="row">
				<div class="small-12 medium-8 large-12 columns medium-centered">
					<label>Initial value: null</label>
					<input type="text" data-date-time data-nullable />
				</div>
			</div>

			<label>Code:</label>
			<code>
					&lt;input type="text" data-date-time data-nullable value="1977-07-06 14:32:01"  /&gt;

					&lt;input type="text" data-date-time data-nullable /&gt;
			</code>
		</div>
	</div>


</body>
</head>
